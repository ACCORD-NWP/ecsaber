--- /home/benjaminm/code/oops-bundle/ecsaber/saber/src/saber/blocks/SaberCentralBlockBase.h.tmp.bak	2024-05-06 13:39:34.737663924 +0200
+++ /home/benjaminm/code/oops-bundle/ecsaber/saber/src/saber/blocks/SaberCentralBlockBase.h	2024-05-06 13:05:34.496243376 +0200
@@ -30,6 +30,7 @@
 #include "oops/util/Printable.h"
 
 #include "saber/blocks/SaberBlockParametersBase.h"
+#include "saber/oops/ECUtilities.h"
 
 // Forward declaration
 namespace oops {
@@ -225,12 +226,17 @@
   // Read fieldsets as increments
   std::vector<oops::FieldSet3D> fsetVec;
   for (const auto & input : this->getReadConfs()) {
+    // Create variables
+    oops::Variables<MODEL> varsT(templatedVarsConf(vars));
+
     // Create increment
-    oops::Increment<MODEL> dx(geom, vars, validTime_);
+    oops::Increment<MODEL> dx(geom, varsT, validTime_);
     dx.read(input.second);
     oops::Log::test() << "Norm of input parameter " << input.first
                       << ": " << dx.norm() << std::endl;
-    fsetVec.push_back(dx.fieldSet());
+    oops::FieldSet3D fset(validTime_, geom.geometry().getComm());
+    fset.deepCopy(dx.increment().fieldSet());
+    fsetVec.push_back(fset);
     fsetVec.back().name() = input.first;
   }
   this->setReadFields(fsetVec);
@@ -250,8 +256,9 @@
 
   // Write fieldsets as increments
   for (const auto & output : outputs) {
-    oops::Increment<MODEL> dx(geom, output.second.variables(), validTime_);
-    dx.fromFieldSet(output.second.fieldSet());
+    oops::Variables<MODEL> varsT(templatedVarsConf(output.second.variables()));
+    oops::Increment<MODEL> dx(geom, varsT, validTime_);
+    dx.increment().fromFieldSet(output.second.fieldSet());
     oops::Log::test() << "Norm of output parameter " << output.second.name()
                       << ": " << dx.norm() << std::endl;
     dx.write(output.first);
