--- /perm/sbbm/hm_lib/saber/bundle/ecsaber/saber/src/saber/blocks/SaberCentralBlockBase.h.tmp.bak	2024-02-16 11:15:26.815031818 +0000
+++ /perm/sbbm/hm_lib/saber/bundle/ecsaber/saber/src/saber/blocks/SaberCentralBlockBase.h	2024-02-16 09:51:52.099209382 +0000
@@ -30,6 +30,7 @@
 #include "oops/util/Printable.h"
 
 #include "saber/blocks/SaberBlockParametersBase.h"
+#include "saber/oops/ECUtilities.h"
 
 // Forward declaration
 namespace oops {
@@ -226,12 +227,17 @@
   // Read fieldsets as increments
   std::vector<oops::FieldSet3D> fsetVec;
   for (const auto & input : this->getReadConfs()) {
+    // Create variables
+    oops::Variables<MODEL> varsT(templatedVarsConf(vars));
+
     // Create increment
-    oops::Increment<MODEL> dx(geom, vars, validTime_);
+    oops::Increment<MODEL> dx(geom, varsT, validTime_);
     dx.read(input.second);
     oops::Log::test() << "Norm of input parameter " << input.first
                       << ": " << dx.norm() << std::endl;
-    fsetVec.push_back(dx.fieldSet());
+    oops::FieldSet3D fset(validTime_, geom.geometry().getComm());
+    fset.deepCopy(dx.increment().fieldSet());
+    fsetVec.push_back(fset);
     fsetVec.back().name() = input.first;
   }
   this->setReadFields(fsetVec);
@@ -250,12 +256,15 @@
   std::vector<std::pair<eckit::LocalConfiguration, oops::FieldSet3D>> outputs
     = this->fieldsToWrite();
 
+  // Create variables
+  oops::Variables<MODEL> varsT(templatedVarsConf(vars));
+
   // Create increment
-  oops::Increment<MODEL> dx(geom, vars, validTime_);
+  oops::Increment<MODEL> dx(geom, varsT, validTime_);
 
   // Write fieldsets as increments
   for (const auto & output : outputs) {
-    dx.fromFieldSet(output.second.fieldSet());
+    dx.increment().fromFieldSet(output.second.fieldSet());
     oops::Log::test() << "Norm of output parameter " << output.second.name()
                       << ": " << dx.norm() << std::endl;
     dx.write(output.first);
