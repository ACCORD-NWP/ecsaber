--- /home/benjaminm/code/oops-bundle/ecsaber/saber/src/saber/fastlam/LayerBase.h.tmp	2024-03-07 12:22:36.603915290 +0100
+++ /home/benjaminm/code/oops-bundle/ecsaber/saber/src/saber/fastlam/LayerBase.h	2024-03-07 11:36:54.473904631 +0100
@@ -36,7 +36,8 @@
   // Constructor
   LayerBase(const FastLAMParametersBase & params,
             const oops::GeometryData & gdata,
-            const std::string & myVar,
+            const std::string & myGroup,
+            const std::vector<std::string> & myVars,
             const size_t & nx0,
             const size_t & ny0,
             const size_t & nz0) :
@@ -44,7 +45,8 @@
     gdata_(gdata),
     comm_(gdata_.comm()),
     myrank_(comm_.rank()),
-    myVar_(myVar),
+    myGroup_(myGroup),
+    myVars_(myVars),
     nx0_(nx0),
     ny0_(ny0),
     mSize_(gdata_.functionSpace().ghost().shape(0)),
@@ -71,7 +73,9 @@
   // Non-virtual methods
 
   // Setups
-  void setupVerticalCoord(const atlas::Field &, const atlas::Field &);
+  void setupVerticalCoord(const std::string &,
+                          const atlas::Field &,
+                          const atlas::Field &);
   void setupInterpolation();
   void setupKernels();
   void setupNormalization();
@@ -112,8 +116,9 @@
   const eckit::mpi::Comm & comm_;
   size_t myrank_;
 
-  // Variable
-  std::string myVar_;
+  // Group and variables
+  std::string myGroup_;
+  std::vector<std::string> myVars_;
 
   // Model grid
   size_t nx0_;
@@ -187,6 +192,7 @@
   static std::unique_ptr<LayerBase> create(const FastLAMParametersBase &,
                                            const oops::GeometryData &,
                                            const std::string &,
+                                           const std::vector<std::string> &,
                                            const size_t &,
                                            const size_t &,
                                            const size_t &);
@@ -200,6 +206,7 @@
   virtual std::unique_ptr<LayerBase> make(const FastLAMParametersBase &,
                                           const oops::GeometryData &,
                                           const std::string &,
+                                          const std::vector<std::string> &,
                                           const size_t &,
                                           const size_t &,
                                           const size_t &) = 0;
@@ -216,11 +223,12 @@
 class LayerMaker : public LayerFactory {
   std::unique_ptr<LayerBase> make(const FastLAMParametersBase & params,
                                   const oops::GeometryData & gdata,
-                                  const std::string & myVar,
+                                  const std::string & myGroup,
+                                  const std::vector<std::string> & myVars,
                                   const size_t & nx0,
                                   const size_t & ny0,
                                   const size_t & nz0) override {
-    return std::make_unique<T>(params, gdata, myVar, nx0, ny0, nz0);
+    return std::make_unique<T>(params, gdata, myGroup, myVars, nx0, ny0, nz0);
   }
 
  public:
