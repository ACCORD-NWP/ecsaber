--- /home/benjaminm/code/oops-bundle/ecsaber/saber/src/saber/fastlam/LayerBase.h.tmp.bak	2024-04-04 09:54:15.820297722 +0200
+++ /home/benjaminm/code/oops-bundle/ecsaber/saber/src/saber/fastlam/LayerBase.h	2024-03-25 16:37:27.937996925 +0100
@@ -35,6 +35,7 @@
 
   // Constructor
   LayerBase(const FastLAMParametersBase & params,
+            const eckit::LocalConfiguration & fieldsMetaData,
             const oops::GeometryData & gdata,
             const std::string & myGroup,
             const std::vector<std::string> & myVars,
@@ -42,6 +43,7 @@
             const size_t & ny0,
             const size_t & nz0) :
     params_(params),
+    fieldsMetaData_(fieldsMetaData),
     gdata_(gdata),
     comm_(gdata_.comm()),
     myrank_(comm_.rank()),
@@ -107,6 +109,7 @@
 
   // Parameters
   FastLAMParametersBase params_;
+  const eckit::LocalConfiguration fieldsMetaData_;
 
   // Model grid geometry data
   const oops::GeometryData & gdata_;
@@ -164,6 +167,7 @@
   atlas::FieldSet fset_;
 
   // Reduced grid <=> model grid (interpolation)
+  bool noInterp_;
   size_t rSendSize_;
   size_t mRecvSize_;
   std::vector<int> rSendCounts_;
@@ -193,6 +197,7 @@
 class LayerFactory {
  public:
   static std::unique_ptr<LayerBase> create(const FastLAMParametersBase &,
+                                           const eckit::LocalConfiguration &,
                                            const oops::GeometryData &,
                                            const std::string &,
                                            const std::vector<std::string> &,
@@ -207,6 +212,7 @@
 
  private:
   virtual std::unique_ptr<LayerBase> make(const FastLAMParametersBase &,
+                                          const eckit::LocalConfiguration &,
                                           const oops::GeometryData &,
                                           const std::string &,
                                           const std::vector<std::string> &,
@@ -225,13 +231,14 @@
 template<class T>
 class LayerMaker : public LayerFactory {
   std::unique_ptr<LayerBase> make(const FastLAMParametersBase & params,
+                                  const eckit::LocalConfiguration & fieldsMetaData,
                                   const oops::GeometryData & gdata,
                                   const std::string & myGroup,
                                   const std::vector<std::string> & myVars,
                                   const size_t & nx0,
                                   const size_t & ny0,
                                   const size_t & nz0) override {
-    return std::make_unique<T>(params, gdata, myGroup, myVars, nx0, ny0, nz0);
+    return std::make_unique<T>(params, fieldsMetaData, gdata, myGroup, myVars, nx0, ny0, nz0);
   }
 
  public:
