--- /home/benjaminm/code/oops-bundle/ecsaber/saber/src/saber/fastlam/FastLAM.cc.tmp	2024-04-04 15:19:53.041075858 +0200
+++ /home/benjaminm/code/oops-bundle/ecsaber/saber/src/saber/fastlam/FastLAM.cc	2024-04-04 13:31:19.653621909 +0200
@@ -47,7 +47,8 @@
     comm_(gdata_.comm()),
     activeVars_(activeVars),
     params_(params.calibration.value() != boost::none ? *params.calibration.value()
-      : *params.read.value())
+      : *params.read.value()),
+    fieldsMetaData_(params.fieldsMetaData.value())
 {
   oops::Log::trace() << classname() << "::FastLAM starting" << std::endl;
 
@@ -665,8 +666,8 @@
     for (size_t jg = 0; jg < groups_.size(); ++jg) {
       // Create layers
       for (size_t jBin = 0; jBin < nLayers; ++jBin) {
-        data_[jg].emplace_back(LayerFactory::create(params_, gdata_, groups_[jg].name_,
-          groups_[jg].variables_, nx0_, ny0_, groups_[jg].nz0_));
+        data_[jg].emplace_back(LayerFactory::create(params_, fieldsMetaData_, gdata_,
+          groups_[jg].name_, groups_[jg].variables_, nx0_, ny0_, groups_[jg].nz0_));
       }
     }
 
@@ -782,8 +783,8 @@
     // Create layers
     std::vector<std::unique_ptr<LayerBase>> layers;
     for (size_t jBin = 0; jBin < nLayers; ++jBin) {
-      data_[jg].emplace_back(LayerFactory::create(params_, gdata_, groups_[jg].name_,
-        groups_[jg].variables_, nx0_, ny0_, groups_[jg].nz0_));
+      data_[jg].emplace_back(LayerFactory::create(params_, fieldsMetaData_, gdata_,
+        groups_[jg].name_, groups_[jg].variables_, nx0_, ny0_, groups_[jg].nz0_));
     }
   }
   for (size_t jBin = 0; jBin < nLayers; ++jBin) {
@@ -1037,6 +1038,7 @@
       }
 
       // Add pair
+      fset.name() = param;
       pairs.push_back(std::make_pair(file, fset));
     }
     if (param == "index j") {
@@ -1061,6 +1063,7 @@
       }
 
       // Add pair
+      fset.name() = param;
       pairs.push_back(std::make_pair(file, fset));
     }
     if (param == "normalized horizontal length-scale") {
@@ -1087,6 +1090,7 @@
       }
 
       // Add pair
+      fset.name() = param;
       pairs.push_back(std::make_pair(file, fset));
     }
     if (param == "weight") {
@@ -1124,6 +1128,7 @@
         util::seekAndReplace(fileCmp, "%component%", jBin, 2);
 
         // Add pair
+        fset.name() = param + " - " + std::to_string(jBin);
         pairs.push_back(std::make_pair(fileCmp, fset));
       }
     }
@@ -1156,6 +1161,7 @@
         util::seekAndReplace(fileCmp, "%component%", jBin, 2);
 
         // Add pair
+        fset.name() = param + " - " + std::to_string(jBin);
         pairs.push_back(std::make_pair(fileCmp, fset));
       }
     }
@@ -1188,6 +1194,7 @@
         util::seekAndReplace(fileCmp, "%component%", jBin, 2);
 
         // Add pair
+        fset.name() = param + " - " + std::to_string(jBin);
         pairs.push_back(std::make_pair(fileCmp, fset));
       }
     }
