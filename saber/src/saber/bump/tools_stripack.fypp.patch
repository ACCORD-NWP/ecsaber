--- /home/benjaminm/code/oops-bundle/ecsaber/saber/src/saber/bump/tools_stripack.fypp.tmp	2024-05-22 11:25:07.054617551 +0200
+++ /home/benjaminm/code/oops-bundle/ecsaber/saber/src/saber/bump/tools_stripack.fypp	2024-05-22 10:50:00.735296744 +0200
@@ -22,9 +22,6 @@
 interface addnod
    module procedure stripack_addnod
 end interface
-interface area
-   module procedure stripack_area
-end interface
 interface bdyadd
    module procedure stripack_bdyadd
 end interface
@@ -69,7 +66,7 @@
 end interface
 
 private
-public :: area,bnodes,getnp,trfind,trmesh
+public :: bnodes,getnp,trfind,trmesh
 
 contains
 
@@ -182,87 +179,6 @@
 end subroutine stripack_addnod
 
 !----------------------------------------------------------------------
-! Subroutine: stripack_area
-!> Compute the area of a spherical triangle
-!----------------------------------------------------------------------
-subroutine stripack_area(v1,v2,v3,area)
-
-implicit none
-
-! Passed variables
-real(kind_real),intent(in) :: v1(3) !< First point cartesian coordinates
-real(kind_real),intent(in) :: v2(3) !< Second point cartesian coordinates
-real(kind_real),intent(in) :: v3(3) !< Third point cartesian coordinates
-real(kind_real),intent(out) :: area !< Area on the unit sphere
-
-! Local variables
-real(kind_real) :: a1,a2,a3,ca1,ca2,ca3,s12,s23,s31
-real(kind_real) :: dv1(3),dv2(3),dv3(3),u12(3),u23(3),u31(3)
-
-! Set name
-@:set_name(stripack_area)
-
-! Probe in
-@:probe_in()
-
-! Initialization
-dv1 = v1
-dv2 = v2
-dv3 = v3
-
-! Compute cross products Uij = Vi X Vj
-u12(1) = dv1(2)*dv2(3)-dv1(3)*dv2(2)
-u12(2) = dv1(3)*dv2(1)-dv1(1)*dv2(3)
-u12(3) = dv1(1)*dv2(2)-dv1(2)*dv2(1)
-u23(1) = dv2(2)*dv3(3)-dv2(3)*dv3(2)
-u23(2) = dv2(3)*dv3(1)-dv2(1)*dv3(3)
-u23(3) = dv2(1)*dv3(2)-dv2(2)*dv3(1)
-u31(1) = dv3(2)*dv1(3)-dv3(3)*dv1(2)
-u31(2) = dv3(3)*dv1(1)-dv3(1)*dv1(3)
-u31(3) = dv3(1)*dv1(2)-dv3(2)*dv1(1)
-
-! Normalize Uij to unit vectors
-s12 = dot_product(u12,u12)
-s23 = dot_product(u23,u23)
-s31 = dot_product(u31,u31)
-
-! Test for a degenerate triangle associated with collinear vertices
-if ((.not.(abs(s12)>zero)).or.(.not.(abs(s23)>zero)).or.(.not.(abs(s31)>zero))) then
-   area = zero
-else
-   s12 = sqrt(s12)
-   s23 = sqrt(s23)
-   s31 = sqrt(s31)
-   u12 = u12/s12
-   u23 = u23/s23
-   u31 = u31/s31
-
-   ! Compute interior angles Ai as the dihedral angles between planes
-   ca1 = -dot_product(u12,u31)
-   ca2 = -dot_product(u23,u12)
-   ca3 = -dot_product(u31,u23)
-   ca1 = max(ca1,-one)
-   ca1 = min(ca1,+one)
-   ca2 = max(ca2,-one)
-   ca2 = min(ca2,+one)
-   ca3 = max(ca3,-one)
-   ca3 = min(ca3,+one)
-   a1 = acos(ca1)
-   a2 = acos(ca2)
-   a3 = acos(ca3)
-
-   ! Compute area = a1 + a2 + a3 - pi
-   area = a1+a2+a3-pi
-   if (area<zero) area = zero
-end if
-
-! Probe out
-@:probe_out()
-
-end subroutine stripack_area
-
-
-!----------------------------------------------------------------------
 ! Subroutine: stripack_bdyadd
 !> Add a boundary node to a triangulation
 !----------------------------------------------------------------------
