--- /home/benjaminm/code/oops-bundle/ecsaber/oops-patch/src/oops/interface/ModelData.h.tmp	2024-07-19 08:26:29.747121930 +0200
+++ /home/benjaminm/code/oops-bundle/ecsaber/oops-patch/src/oops/interface/ModelData.h	2024-07-15 14:03:30.074175197 +0200
@@ -11,8 +11,8 @@
 #include <memory>
 #include <string>
 
-#include "oops/base/Geometry.h"
-#include "oops/base/Variables.h"
+#include "oops/interface/Geometry.h"
+#include "oops/interface/Variables.h"
 
 #include "oops/util/Logger.h"
 #include "oops/util/ObjectCounter.h"
@@ -27,12 +27,11 @@
 template <typename MODEL>
 class ModelData : public  util::Printable,
                   private util::ObjectCounter<ModelData<MODEL> >  {
-  typedef typename MODEL::ModelData ModelData_;
   typedef Geometry<MODEL>           Geometry_;
 
  public:
   static const std::string classname() {return "oops::ModelData";}
-  static const JediVariables defaultVariables() {return ModelData_::defaultVariables();}
+  static const JediVariables defaultVariables() {return JediVariables();}
 
   explicit ModelData(const Geometry_ &);
   virtual ~ModelData();
@@ -45,8 +44,6 @@
 
  private:
   void print(std::ostream &) const override;
-
-  std::unique_ptr<ModelData_> modeldata_;  // pointer to the ModelData implementation
 };
 
 // -----------------------------------------------------------------------------
@@ -56,7 +53,6 @@
 {
   Log::trace() << "ModelData<MODEL>::ModelData starting" << std::endl;
   util::Timer timer(classname(), "ModelData");
-  modeldata_.reset(new ModelData_(geometry.geometry()));
   Log::trace() << "ModelData<MODEL>::ModelData done" << std::endl;
 }
 
@@ -66,7 +62,6 @@
 ModelData<MODEL>::~ModelData() {
   Log::trace() << "ModelData<MODEL>::~ModelData starting" << std::endl;
   util::Timer timer(classname(), "~ModelData");
-  modeldata_.reset();
   Log::trace() << "ModelData<MODEL>::~ModelData done" << std::endl;
 }
 
@@ -76,8 +71,11 @@
 const eckit::LocalConfiguration ModelData<MODEL>::modelData() const {
   Log::trace() << "ModelData<MODEL>::modelData starting" << std::endl;
   util::Timer timer(classname(), "modelData");
+  eckit::LocalConfiguration conf;
+  // QUENCH
+  conf.set("epsilon", 0.621957535);
   Log::trace() << "ModelData<MODEL>::modelData done" << std::endl;
-  return modeldata_->modelData();
+  return conf;
 }
 
 // -----------------------------------------------------------------------------
@@ -86,7 +84,6 @@
 void ModelData<MODEL>::print(std::ostream & os) const {
   Log::trace() << "ModelData<MODEL>::print starting" << std::endl;
   util::Timer timer(classname(), "print");
-  os << *modeldata_;
   Log::trace() << "ModelData<MODEL>::print done" << std::endl;
 }
 
